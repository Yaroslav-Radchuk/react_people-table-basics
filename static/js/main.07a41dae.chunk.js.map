{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/ParentLink/Parentlink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","components/PageNavLink/PageNavLink.tsx","components/MainNav/MainNav.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","ParentLink","parent","personIsParent","getParent","to","slug","classNames","sex","PeopleTable","persons","selectedPerson","find","person","name","activePeople","map","born","died","motherName","PeoplePage","useState","setPerson","useParams","isLoading","setIsLoading","error","setError","useEffect","res","catch","finally","length","PageNavLink","text","isActive","MainNav","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.07a41dae.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  parent: string | null,\n  getParent: (value: string | null) => Person | undefined,\n};\n\nexport const ParentLink: React.FC<Props> = ({ parent, getParent }) => {\n  const personIsParent = getParent(parent);\n\n  if (!parent) {\n    return (\n      <td> - </td>\n    );\n  }\n\n  return (\n    <td>\n      {personIsParent ? (\n        <Link\n          to={`/people/${personIsParent?.slug}`}\n          className={classNames({\n            'has-text-danger': personIsParent?.sex === 'f',\n          })}\n        >\n          {parent}\n        </Link>\n      ) : (\n        parent\n      )}\n    </td>\n  );\n};\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { ParentLink } from '../ParentLink/Parentlink';\n\ntype Props = {\n  persons: Person[];\n  selectedPerson: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  persons,\n  selectedPerson,\n}) => {\n  const getParent = (parent: string | null) => {\n    return persons.find(person => person.name === parent);\n  };\n\n  const activePeople = persons.find(person => person.slug === selectedPerson);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {persons.map(person => (\n              <tr\n                data-cy=\"person\"\n                key={person.slug}\n                className={classNames({\n                  'has-background-warning': person.slug === activePeople?.slug,\n                })}\n              >\n                <td>\n                  <Link\n                    to={`/people/${person.slug}`}\n                    className={classNames({\n                      'has-text-danger': person.sex === 'f',\n                    })}\n                  >\n                    {person.name}\n                  </Link>\n                </td>\n\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n                <ParentLink\n                  parent={person.motherName}\n                  getParent={getParent}\n                />\n\n                <ParentLink\n                  parent={person.motherName}\n                  getParent={getParent}\n                />\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [person, setPerson] = useState<Person[]>([]);\n  const { slug = '' } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(res => setPerson(res))\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {!isLoading && !error && !person.length && (\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      )}\n\n      {!isLoading && !error && person.length && (\n        <PeopleTable\n          persons={person}\n          selectedPerson={slug}\n        />\n      )}\n\n      {isLoading && <Loader /> }\n      {error && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const MainNav = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { MainNav } from './components/MainNav/MainNav';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <MainNav />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={\n                <h1 className=\"title\">Page not found</h1>\n              }\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}